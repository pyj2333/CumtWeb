<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- 配置连接数据库的基本信息 jdbc:mysql://localhost:3306/hibernate-->
        <property name="connection.url">jdbc:mysql://localhost:3306/cumt?useSSL=false</property>
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>

        <property name="connection.username">root</property>
        <property name="connection.password">jiege666@G</property>

        <!-- 配置 hibernate 的基本信息 -->
        <!--所使用的数据库方言 MySQL8Dialect-->
        <property name="dialect">org.hibernate.dialect.MySQL8Dialect</property>
        <!-- 执行操作时是否在控制台打印 SQL -->
        <property name="show_sql">false</property>
        <!-- 是否对 SQL 进行格式化,例如语句显示会换行 -->
        <property name="format_sql">true</property>
        <!-- 指定自动生成数据表的策略 -->
        <!--property name="hbm2ddl.auto">update</property-->


        <!-- 配置 C3P0 数据源-->
        <!--数据库连接池的最大连接数-->
        <property name="hibernate.c3p0.max_size">10</property>
        <!--数据库连接池的最小连接数-->
        <property name="hibernate.c3p0.min_size">5</property>
        <!--当数据库连接池中的连接耗尽时, 同一时刻获取多少个数据库连接-->
        <property name="c3p0.acquire_increment">2</property>
        <!--表示连接池检测线程多长时间检测一次池内的所有链接对象是否超时.
        连接池本身不会把自己从连接池中移除，而是专门有一个线程按照一定的时间间隔来做这件事，
        这个线程通过比较连接对象最后一次被使用时间和当前时间的时间差来和 timeout 做对比，进而决定是否销毁这个连接对象。-->
        <property name="c3p0.idle_test_period">2000</property>
        <!--数据库连接池中连接对象在多长时间没有使用过后，就应该被销毁-->
        <property name="c3p0.timeout">2000</property>
        <!--缓存 Statement 对象的数量-->
        <property name="c3p0.max_statements">10</property>


        <!-- 设定 JDBC 的 Statement 读取数据的时候每次从数据库中取出的记录条数 ,取100最好-->
        <property name="hibernate.jdbc.fetch_size">100</property>
        <!-- 设定对数据库进行批量删除，批量更新和批量插入的时候的批次大小 取20合适-->
        <property name="jdbc.batch_size">30</property>


        <!--通过类配置，使用jpa技术-->
        <!--mapping class="app.comment.commentpojo.Comment"/-->
        <!--通过xml文件配置-->
        <!--mapping resource="User.hbm.xml"/-->
        <mapping class="app.pojo.userservice.User"/>

    </session-factory>
</hibernate-configuration>
